{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ken/dev/CommitPoolMatic/CommitPoolApp/Wallet.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport QRCode from 'react-native-qrcode-svg';\nimport { ethers } from 'ethers';\nimport daiAbi from \"./daiAbi.json\";\nimport abi from \"./abi.json\";\n\nvar Wallet = function (_Component) {\n  _inherits(Wallet, _Component);\n\n  var _super = _createSuper(Wallet);\n\n  function Wallet(props) {\n    var _this;\n\n    _classCallCheck(this, Wallet);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      balance: 0.0,\n      daiBalance: 0.0,\n      commitment: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Wallet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url, provider, privateKey, wallet, contractAddress, contract, daiBalance, balance;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56';\n              provider = new ethers.providers.JsonRpcProvider(url);\n              privateKey = this.props.account.signingKey.privateKey;\n              wallet = new ethers.Wallet(privateKey);\n              wallet = wallet.connect(provider);\n              contractAddress = '0x70d1f773a9f81c852087b77f6ae6d3032b02d2ab';\n              contract = new ethers.Contract(contractAddress, daiAbi, provider);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(contract.balanceOf(this.props.account.signingKey.address));\n\n            case 9:\n              daiBalance = _context2.sent;\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(wallet.getBalance());\n\n            case 12:\n              balance = _context2.sent;\n              this.setState({\n                balance: balance.div(1000000000000000).toNumber() / 1000\n              });\n              this.setState({\n                daiBalance: daiBalance.div(1000000000000000).toNumber() / 1000\n              });\n              setInterval(function _callee() {\n                var daiBalance, balance;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(contract.balanceOf(_this2.props.account.signingKey.address));\n\n                      case 2:\n                        daiBalance = _context.sent;\n                        _context.next = 5;\n                        return _regeneratorRuntime.awrap(wallet.getBalance());\n\n                      case 5:\n                        balance = _context.sent;\n\n                        _this2.setState({\n                          balance: balance.div(1000000000000000).toNumber() / 1000\n                        });\n\n                        _this2.setState({\n                          daiBalance: daiBalance.div(1000000000000000).toNumber() / 1000\n                        });\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }, 2500);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var url, provider, commitPoolContractAddress, commitPoolContract, commitment;\n      return _regeneratorRuntime.async(function next$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56';\n              provider = new ethers.providers.JsonRpcProvider(url);\n              commitPoolContractAddress = '0x251B6f95F6A17D2aa350456f616a84b733380eBE';\n              commitPoolContract = new ethers.Contract(commitPoolContractAddress, abi, provider);\n              _context3.prev = 4;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(commitPoolContract.commitments(this.props.account.signingKey.address));\n\n            case 7:\n              commitment = _context3.sent;\n\n              if (commitment.exists) {\n                this.props.next(7);\n              } else {\n                this.props.next(5);\n              }\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](4);\n              this.props.next(5);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[4, 11]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          color: 'white',\n          marginBottom: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Add Funds\"), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          textAlign: 'center',\n          color: 'white',\n          marginBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, \"This is your local wallet. We've created one for you here in your browser.\", \"\\n\", \"All you need to do is add funds by transferring them to this wallet's adddress below.\"), React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          color: 'white',\n          marginBottom: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, \"You can get funds on testnet from https://faucet.matic.network\"), React.createElement(QRCode, {\n        value: \"this.props.account.signingKey.address\",\n        size: 225,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        onPress: function onPress() {\n          return Clipboard.setString(_this3.props.account.signingKey.address);\n        },\n        style: {\n          fontSize: 14,\n          color: 'white',\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, this.props.account.signingKey.address), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white',\n          marginTop: 25,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"Balances:\"), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white',\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, this.state.balance, \" MATIC\"), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white',\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, this.state.daiBalance, \" MATIC Dai\")), React.createElement(TouchableOpacity, {\n        style: {\n          width: 300,\n          height: 50,\n          backgroundColor: '#D45353',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this3.next();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Get Started!\")));\n    }\n  }]);\n\n  return Wallet;\n}(Component);\n\nexport { Wallet as default };","map":{"version":3,"sources":["/Users/ken/dev/CommitPoolMatic/CommitPoolApp/Wallet.tsx"],"names":["React","Component","QRCode","ethers","daiAbi","abi","Wallet","props","state","balance","daiBalance","commitment","undefined","url","provider","providers","JsonRpcProvider","privateKey","account","signingKey","wallet","connect","contractAddress","contract","Contract","balanceOf","address","getBalance","setState","div","toNumber","setInterval","commitPoolContractAddress","commitPoolContract","commitments","exists","next","flex","alignItems","justifyContent","fontSize","color","marginBottom","textAlign","Clipboard","setString","marginTop","fontWeight","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Linking, StyleSheet, Image, Text, Button, TouchableOpacity, Clipboard } from \"react-native\";\nimport ConfettiCannon from 'react-native-confetti-cannon';\nimport QRCode from 'react-native-qrcode-svg';\nimport { ethers } from 'ethers';\nimport daiAbi from './daiAbi.json'\nimport abi from './abi.json'\n\n\nexport default class Wallet extends Component <{next: any, account: any}, {balance: number, daiBalance: number, commitment: any}> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      balance: 0.0,\n      daiBalance: 0.0,\n      commitment: undefined\n    };\n  }\n\n  async componentDidMount() {\n    const url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56'\n\n    const provider = new ethers.providers.JsonRpcProvider(url);\n    \n    let privateKey = this.props.account.signingKey.privateKey;\n    let wallet = new ethers.Wallet(privateKey);\n    wallet = wallet.connect(provider);\n    let contractAddress = '0x70d1f773a9f81c852087b77f6ae6d3032b02d2ab';\n    let contract = new ethers.Contract(contractAddress, daiAbi, provider);\n    const daiBalance = await contract.balanceOf(this.props.account.signingKey.address)\n    const balance = await wallet.getBalance();\n    this.setState({balance: balance.div(1000000000000000).toNumber() / 1000})\n    this.setState({daiBalance: daiBalance.div(1000000000000000).toNumber() / 1000})\n\n    setInterval(async () => {\n      const daiBalance = await contract.balanceOf(this.props.account.signingKey.address)\n      const balance = await wallet.getBalance();\n      this.setState({balance: balance.div(1000000000000000).toNumber() / 1000})\n      this.setState({daiBalance: daiBalance.div(1000000000000000).toNumber() / 1000})\n    }, 2500)\n  }\n\n  async next() {\n    const url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56'\n\n    const provider = new ethers.providers.JsonRpcProvider(url);\n    let commitPoolContractAddress = '0x251B6f95F6A17D2aa350456f616a84b733380eBE';\n    let commitPoolContract = new ethers.Contract(commitPoolContractAddress, abi, provider);\n    try {\n      const commitment = await commitPoolContract.commitments(this.props.account.signingKey.address);\n      if(commitment.exists){\n        this.props.next(7)\n      } else {\n        this.props.next(5)\n      }\n    } catch (error) {\n      this.props.next(5)\n    }\n  }\n\n  render() {\n    return (\n        <View style={{flex: 1, alignItems: 'center', justifyContent: 'space-around'}}>\n\n            <View style={{alignItems: 'center'}}>\n                <Text style={{fontSize: 50, color: 'white', marginBottom: 70}}>Add Funds</Text>\n                <Text style={{fontSize: 20, textAlign: 'center', color: 'white', marginBottom: 10}}>This is your local wallet. We've created one for you here in your browser. \n                {\"\\n\"}\n                All you need to do is add funds by transferring them to this wallet's adddress below.</Text>\n                <Text style={{fontSize: 15, color: 'white', marginBottom: 70}}>You can get funds on testnet from https://faucet.matic.network</Text>\n                <QRCode\n                    value=\"this.props.account.signingKey.address\"\n                    size={225}\n                />\n                <Text onPress={()=>Clipboard.setString(this.props.account.signingKey.address)} style={{fontSize: 14, color: 'white', marginTop: 10}}>{this.props.account.signingKey.address}</Text>\n                <Text style={{fontSize: 30, color: 'white', marginTop: 25, fontWeight: 'bold'}}>Balances:</Text>\n                <Text style={{fontSize: 30, color: 'white', marginTop: 25}}>{this.state.balance} MATIC</Text>\n                <Text style={{fontSize: 30, color: 'white', marginTop: 25}}>{this.state.daiBalance} MATIC Dai</Text>\n            </View>\n            <TouchableOpacity\n                    style={{width: 300, height: 50, backgroundColor: '#D45353', alignItems: 'center', justifyContent: 'center'}}\n                    onPress={() => this.next()}>\n                <Text style={{fontSize: 30, color: 'white'}}>Get Started!</Text>\n            </TouchableOpacity>\n        </View>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}