{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ken/dev/CommitPoolMatic/CommitPoolApp/App.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Account from \"@tasit/account\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport Main from \"./Main\";\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://www.strava.com/oauth/mobile/authorize',\n  tokenEndpoint: 'https://www.strava.com/oauth/token',\n  revocationEndpoint: 'https://www.strava.com/oauth/deauthorize'\n};\nimport * as Random from \"expo-random\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width;\n\n  var _useAuthRequest = useAuthRequest({\n    clientId: '51548',\n    scopes: ['read,activity:read'],\n    redirectUri: makeRedirectUri({\n      native: 'your.app://redirect'\n    })\n  }, discovery),\n      _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n      request = _useAuthRequest2[0],\n      response = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      fetch('https://www.strava.com/oauth/token?client_id=51548&client_secret=28d56211b9ca33972055bf61010074fbedc3c7c2&code=' + response.params.code + '&grant_type=authorization_code', {\n        method: 'POST'\n      }).then(function (res) {\n        return res.json();\n      }).then(function _callee(json) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(json);\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('rt', json.refresh_token));\n\n              case 3:\n                setCode(json);\n                createUser(json.athlete.id, json.refresh_token);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, [response]);\n\n  var stravaOauth = function stravaOauth() {\n    promptAsync();\n  };\n\n  var createUser = function createUser(address, token) {\n    return _regeneratorRuntime.async(function createUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://test2.dcl.properties/user', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                address: address,\n                token: token\n              })\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Home, {\n    stravaOauth: stravaOauth,\n    code: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  });\n}\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      accessToken: \"\",\n      message: \"Awaiting accesstoken\",\n      address: \"\",\n      account: undefined\n    };\n\n    _this._storeData = function _callee2(key, value) {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n            case 3:\n              _context3.next = 7;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this._retrieveData = function _callee3(key) {\n      var value;\n      return _regeneratorRuntime.async(function _callee3$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context4.sent;\n\n              if (!(value !== null)) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", value);\n\n            case 6:\n              _context4.next = 10;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accountString;\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(this._retrieveData('account'));\n\n            case 2:\n              accountString = _context5.sent;\n\n              if (!accountString) {\n                this.getAccount();\n              } else {\n                this.setAccount(accountString);\n              }\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount() {\n      var makeAccount, _await$makeAccount, address, account;\n\n      return _regeneratorRuntime.async(function getAccount$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              makeAccount = function _makeAccount() {\n                var randomBytes, account, address;\n                return _regeneratorRuntime.async(function makeAccount$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return _regeneratorRuntime.awrap(Random.getRandomBytesAsync(16));\n\n                      case 2:\n                        randomBytes = _context6.sent;\n                        account = Account.createUsingRandomness(randomBytes);\n                        address = account.address;\n                        return _context6.abrupt(\"return\", {\n                          address: address,\n                          account: account\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              };\n\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(makeAccount());\n\n            case 3:\n              _await$makeAccount = _context7.sent;\n              address = _await$makeAccount.address;\n              account = _await$makeAccount.account;\n\n              this._storeData('account', JSON.stringify(account));\n\n              this.setState({\n                address: address,\n                account: account\n              });\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setAccount\",\n    value: function setAccount(accountString) {\n      var account = JSON.parse(accountString);\n      console.log(account);\n      this.setState({\n        address: account.signingKey.address,\n        account: account\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Main, {\n        account: this.state.account,\n        stravaOAuth: this.props.stravaOauth,\n        code: this.props.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar _Dimensions$get2 = Dimensions.get('window'),\n    width = _Dimensions$get2.width;\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: 'whitesmoke'\n  },\n  linearGradient: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: width,\n    borderRadius: 5\n  },\n  AppHeader: {\n    backgroundColor: '#282c34',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/ken/dev/CommitPoolMatic/CommitPoolApp/App.tsx"],"names":["React","useState","Account","WebBrowser","makeRedirectUri","useAuthRequest","Main","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","revocationEndpoint","Random","App","code","setCode","Dimensions","get","width","clientId","scopes","redirectUri","native","request","response","promptAsync","useEffect","type","fetch","params","method","then","res","json","console","log","AsyncStorage","setItem","refresh_token","createUser","athlete","id","stravaOauth","address","token","headers","body","JSON","stringify","Home","state","accessToken","message","account","undefined","_storeData","key","value","_retrieveData","getItem","accountString","getAccount","setAccount","makeAccount","getRandomBytesAsync","randomBytes","createUsingRandomness","setState","parse","signingKey","props","Component","styles","StyleSheet","create","container","flex","alignItems","justifyContent","textAlign","color","linearGradient","borderRadius","AppHeader","backgroundColor","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Account from \"@tasit/account\";\nimport { Dimensions } from 'react-native';\nimport { AsyncStorage } from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport Main from './Main'\n\nWebBrowser.maybeCompleteAuthSession();\n\n// Endpoint\nconst discovery = {\n  authorizationEndpoint: 'https://www.strava.com/oauth/mobile/authorize',\n  tokenEndpoint: 'https://www.strava.com/oauth/token',\n  revocationEndpoint: 'https://www.strava.com/oauth/deauthorize',\n};\n\nimport * as Random from \"expo-random\";\n\nexport default function App() {  \n  const [code, setCode] = useState(true); \n  const { width } = Dimensions.get('window');\n\n  const [request, response, promptAsync] = useAuthRequest(\n    {\n      clientId: '51548',\n      scopes: ['read,activity:read'],\n      // For usage in managed apps using the proxy\n      redirectUri: makeRedirectUri({\n        // For usage in bare and standalone\n        // the \"redirect\" must match your \"Authorization Callback Domain\" in the Strava dev console.\n        native: 'your.app://redirect',\n      }),\n    },\n    discovery\n  );\n\n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      fetch('https://www.strava.com/oauth/token?client_id=51548&client_secret=28d56211b9ca33972055bf61010074fbedc3c7c2&code=' + response.params.code + '&grant_type=authorization_code',\n        {\n          method: 'POST'\n        })\n        .then(res => res.json())\n        .then(async (json) => {\n          console.log(json)\n          await AsyncStorage.setItem(\n            'rt',\n            json.refresh_token\n          );\n          setCode(json);\n          createUser(json.athlete.id, json.refresh_token)\n        })\n    }\n  }, [response]);\n\n  const stravaOauth = () => {\n    promptAsync()\n  }\n\n  const createUser = async (address, token) => {\n    await fetch('https://test2.dcl.properties/user', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({address: address, token: token})\n    });\n  }\n  \n  return (\n    <Home stravaOauth={stravaOauth} code={code}></Home>\n  )\n\n}\n\nclass Home extends React.Component <{stravaOauth: any, code: string}, {}> {\n  state = {\n    accessToken: \"\",\n    message: \"Awaiting accesstoken\",\n    address: \"\",\n    account: undefined\n  };\n\n  async componentDidMount() {\n    const accountString = await this._retrieveData('account')\n\n    if(!accountString) {\n      this.getAccount();\n    } else {\n      this.setAccount(accountString);\n    }\n  }\n\n  async getAccount() {\n    async function makeAccount() {\n      const randomBytes = await Random.getRandomBytesAsync(16);\n  \n      const account = Account.createUsingRandomness(randomBytes);\n      const address = account.address;\n      return {address, account}\n    }\n    const {address, account} = await makeAccount();\n    this._storeData('account', JSON.stringify(account))\n\n    this.setState({address: address, account: account})\n  }\n\n  setAccount(accountString: string) {\n    const account = JSON.parse(accountString)\n    console.log(account)\n\n    this.setState({address: account.signingKey.address, account: account})\n  }\n\n  _storeData = async (key: string, value: string) => {\n    try {\n      await AsyncStorage.setItem(\n        key,\n        value\n      );\n    } catch (error) {\n      // Error saving data\n    }\n  };\n\n  _retrieveData = async (key: string) => {\n    try {\n      const value = await AsyncStorage.getItem(key);\n      if (value !== null) {\n        // We have data!!\n        return value;\n      }\n    } catch (error) {\n      // Error retrieving data\n    }\n  };\n\n  render() {\n    return (\n      <Main account={this.state.account} stravaOAuth={this.props.stravaOauth} code={this.props.code}></Main>\n    );\n  }\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    //backgroundColor: '#282c34',\n    color: 'whitesmoke',\n  },\n\nlinearGradient: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width,\n    borderRadius: 5\n  },\n\n  AppHeader: {\n    backgroundColor: '#282c34',\n    // min-height: 80vh;\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // font-size: calc(10px + 2vmin);\n    color: 'white'\n  }\n});"]},"metadata":{},"sourceType":"module"}