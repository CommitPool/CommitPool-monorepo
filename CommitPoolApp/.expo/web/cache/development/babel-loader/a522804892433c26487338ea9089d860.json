{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ken/dev/CommitPoolMatic/CommitPoolApp/node_modules/react-native-confetti-cannon/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Confetti from \"./components/confetti\";\nimport { randomValue, randomColor } from \"./utils\";\nexport var TOP_MIN = 0.7;\nexport var DEFAULT_COLORS = ['#e67e22', '#2ecc71', '#3498db', '#84AAC2', '#E6D68D', '#F67933', '#42A858', '#4F50A2', '#A86BB7', '#e74c3c', '#1abc9c'];\nexport var DEFAULT_EXPLOSION_SPEED = 350;\nexport var DEFAULT_FALL_SPEED = 3000;\n\nvar Explosion = function (_React$PureComponent) {\n  _inherits(Explosion, _React$PureComponent);\n\n  var _super = _createSuper(Explosion);\n\n  function Explosion(props) {\n    var _this;\n\n    _classCallCheck(this, Explosion);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: []\n    };\n    _this.items = [];\n    _this.animation = new Animated.Value(0);\n\n    _this.componentDidMount = function () {\n      var _this$props = _this.props,\n          _this$props$autoStart = _this$props.autoStart,\n          autoStart = _this$props$autoStart === void 0 ? true : _this$props$autoStart,\n          _this$props$autoStart2 = _this$props.autoStartDelay,\n          autoStartDelay = _this$props$autoStart2 === void 0 ? 0 : _this$props$autoStart2;\n\n      if (autoStart) {\n        setTimeout(_this.start, autoStartDelay);\n      }\n    };\n\n    _this.componentDidUpdate = function (_ref) {\n      var prevCount = _ref.count,\n          _ref$colors = _ref.colors,\n          prevColors = _ref$colors === void 0 ? DEFAULT_COLORS : _ref$colors;\n      var _this$props2 = _this.props,\n          count = _this$props2.count,\n          _this$props2$colors = _this$props2.colors,\n          colors = _this$props2$colors === void 0 ? DEFAULT_COLORS : _this$props2$colors;\n\n      if (count !== prevCount || colors !== prevColors) {\n        _this.setState({\n          items: _this.getItems(prevColors)\n        });\n      }\n    };\n\n    _this.getItems = function (prevColors) {\n      var _this$props3 = _this.props,\n          count = _this$props3.count,\n          _this$props3$colors = _this$props3.colors,\n          colors = _this$props3$colors === void 0 ? DEFAULT_COLORS : _this$props3$colors;\n      var items = _this.state.items;\n      var difference = items.length < count ? count - items.length : 0;\n      var newItems = Array(difference).fill().map(function () {\n        return {\n          leftDelta: randomValue(0, 1),\n          topDelta: randomValue(TOP_MIN, 1),\n          swingDelta: randomValue(0.2, 1),\n          speedDelta: {\n            rotateX: randomValue(0.3, 1),\n            rotateY: randomValue(0.3, 1),\n            rotateZ: randomValue(0.3, 1)\n          },\n          color: randomColor(colors)\n        };\n      });\n      return items.slice(0, count).concat(newItems).map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          color: prevColors !== colors ? randomColor(colors) : item.color\n        });\n      });\n    };\n\n    _this.start = function () {\n      var resume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$props4 = _this.props,\n          _this$props4$explosio = _this$props4.explosionSpeed,\n          explosionSpeed = _this$props4$explosio === void 0 ? DEFAULT_EXPLOSION_SPEED : _this$props4$explosio,\n          _this$props4$fallSpee = _this$props4.fallSpeed,\n          fallSpeed = _this$props4$fallSpee === void 0 ? DEFAULT_FALL_SPEED : _this$props4$fallSpee,\n          onAnimationStart = _this$props4.onAnimationStart,\n          onAnimationResume = _this$props4.onAnimationResume,\n          onAnimationEnd = _this$props4.onAnimationEnd;\n\n      if (resume) {\n        onAnimationResume && onAnimationResume();\n      } else {\n        _this.sequence = Animated.sequence([Animated.timing(_this.animation, {\n          toValue: 0,\n          duration: 0,\n          useNativeDriver: true\n        }), Animated.timing(_this.animation, {\n          toValue: 1,\n          duration: explosionSpeed,\n          easing: Easing.out(Easing.quad),\n          useNativeDriver: true\n        }), Animated.timing(_this.animation, {\n          toValue: 2,\n          duration: fallSpeed,\n          easing: Easing.quad,\n          useNativeDriver: true\n        })]);\n        onAnimationStart && onAnimationStart();\n      }\n\n      _this.sequence && _this.sequence.start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          onAnimationEnd && onAnimationEnd();\n        }\n      });\n    };\n\n    _this.resume = function () {\n      return _this.start(true);\n    };\n\n    _this.stop = function () {\n      var onAnimationStop = _this.props.onAnimationStop;\n      onAnimationStop && onAnimationStop();\n      _this.sequence && _this.sequence.stop();\n    };\n\n    var _props$colors = props.colors,\n        _colors = _props$colors === void 0 ? DEFAULT_COLORS : _props$colors;\n\n    _this.start = _this.start.bind(_assertThisInitialized(_this));\n    _this.resume = _this.resume.bind(_assertThisInitialized(_this));\n    _this.stop = _this.stop.bind(_assertThisInitialized(_this));\n    _this.state.items = _this.getItems(_colors);\n    return _this;\n  }\n\n  _createClass(Explosion, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          origin = _this$props5.origin,\n          fadeOut = _this$props5.fadeOut;\n      var items = this.state.items;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          height = _Dimensions$get.height,\n          width = _Dimensions$get.width;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      }, items.map(function (item, index) {\n        var left = _this2.animation.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: [origin.x, item.leftDelta * width, item.leftDelta * width]\n        });\n\n        var top = _this2.animation.interpolate({\n          inputRange: [0, 1, 1 + item.topDelta, 2],\n          outputRange: [-origin.y, -item.topDelta * height, 0, 0]\n        });\n\n        var rotateX = _this2.animation.interpolate({\n          inputRange: [0, 2],\n          outputRange: ['0deg', item.speedDelta.rotateX * 360 * 10 + \"deg\"]\n        });\n\n        var rotateY = _this2.animation.interpolate({\n          inputRange: [0, 2],\n          outputRange: ['0deg', item.speedDelta.rotateY * 360 * 5 + \"deg\"]\n        });\n\n        var rotateZ = _this2.animation.interpolate({\n          inputRange: [0, 2],\n          outputRange: ['0deg', item.speedDelta.rotateZ * 360 * 2 + \"deg\"]\n        });\n\n        var translateX = _this2.animation.interpolate({\n          inputRange: [0, 0.4, 1.2, 2],\n          outputRange: [0, -(item.swingDelta * 30), item.swingDelta * 30, 0]\n        });\n\n        var opacity = _this2.animation.interpolate({\n          inputRange: [0, 1, 1.8, 2],\n          outputRange: [1, 1, 1, fadeOut ? 0 : 1]\n        });\n\n        var containerTransform = [{\n          translateX: left\n        }, {\n          translateY: top\n        }];\n        var transform = [{\n          rotateX: rotateX\n        }, {\n          rotateY: rotateY\n        }, {\n          rotate: rotateZ\n        }, {\n          translateX: translateX\n        }];\n        return React.createElement(Confetti, {\n          color: item.color,\n          containerTransform: containerTransform,\n          transform: transform,\n          opacity: opacity,\n          key: index,\n          testID: \"confetti-\" + (index + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }\n        });\n      }));\n    }\n  }]);\n\n  return Explosion;\n}(React.PureComponent);\n\nexport default Explosion;","map":{"version":3,"sources":["/Users/ken/dev/CommitPoolMatic/CommitPoolApp/node_modules/react-native-confetti-cannon/src/index.js"],"names":["React","Confetti","randomValue","randomColor","TOP_MIN","DEFAULT_COLORS","DEFAULT_EXPLOSION_SPEED","DEFAULT_FALL_SPEED","Explosion","props","state","items","animation","Animated","Value","componentDidMount","autoStart","autoStartDelay","setTimeout","start","componentDidUpdate","prevCount","count","colors","prevColors","setState","getItems","difference","length","newItems","Array","fill","map","leftDelta","topDelta","swingDelta","speedDelta","rotateX","rotateY","rotateZ","color","slice","concat","item","resume","explosionSpeed","fallSpeed","onAnimationStart","onAnimationResume","onAnimationEnd","sequence","timing","toValue","duration","useNativeDriver","easing","Easing","out","quad","finished","stop","onAnimationStop","bind","origin","fadeOut","Dimensions","get","height","width","index","left","interpolate","inputRange","outputRange","x","top","y","translateX","opacity","containerTransform","translateY","transform","rotate","PureComponent"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { Animated, Dimensions, Easing } from 'react-native';\nimport type { CompositeAnimation } from 'react-native/Libraries/Animated/src/AnimatedImplementation';\nimport type { EndResult } from 'react-native/Libraries/Animated/src/animations/Animation';\n\nimport Confetti from './components/confetti';\nimport { randomValue, randomColor } from './utils';\n\ntype Props = {|\n  count: number,\n  origin: {\n    x: number,\n    y: number\n  },\n  explosionSpeed?: number,\n  fallSpeed?: number,\n  colors?: Array<string>,\n  fadeOut?: boolean,\n  autoStart?: boolean,\n  autoStartDelay?: number,\n  onAnimationStart?: () => void,\n  onAnimationResume?: () => void,\n  onAnimationStop?: () => void,\n  onAnimationEnd?: () => void,\n  testID?: string\n|};\n\ntype Item = {|\n  leftDelta: number,\n  topDelta: number,\n  swingDelta: number,\n  speedDelta: {\n    rotateX: number,\n    rotateY: number,\n    rotateZ: number\n  },\n  color: string\n|};\n\ntype State = {|\n  items: Array<Item>\n|};\n\nexport const TOP_MIN = 0.7;\nexport const DEFAULT_COLORS: Array<string> =[\n  '#e67e22',\n  '#2ecc71',\n  '#3498db',\n  '#84AAC2',\n  '#E6D68D',\n  '#F67933',\n  '#42A858',\n  '#4F50A2',\n  '#A86BB7',\n  '#e74c3c',\n  '#1abc9c'\n];\nexport const DEFAULT_EXPLOSION_SPEED = 350;\nexport const DEFAULT_FALL_SPEED = 3000;\n\nclass Explosion extends React.PureComponent<Props, State> {\n  props: Props;\n  state: State = {\n    items: []\n  };\n  start: () => void;\n  resume: () => void;\n  stop: () => void;\n  sequence: CompositeAnimation | null;\n  items: Array<Item> = [];\n  animation: Animated.Value = new Animated.Value(0);\n\n  constructor(props: Props) {\n    super(props);\n\n    const { colors = DEFAULT_COLORS } = props;\n\n    this.start = this.start.bind(this);\n    this.resume = this.resume.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this.state.items = this.getItems(colors);\n  }\n\n  componentDidMount = () => {\n    const { autoStart = true, autoStartDelay = 0 } = this.props;\n\n    if (autoStart) {\n      setTimeout(this.start, autoStartDelay);\n    }\n  };\n\n  componentDidUpdate = ({ count: prevCount, colors: prevColors = DEFAULT_COLORS }: Props) => {\n    const { count, colors = DEFAULT_COLORS } = this.props;\n\n    if (count !== prevCount || colors !== prevColors) {\n      this.setState({\n        items: this.getItems(prevColors)\n      });\n    }\n  };\n\n  getItems = (prevColors: Array<string>): Array<Item> => {\n    const { count, colors = DEFAULT_COLORS } = this.props;\n    const { items } = this.state;\n\n    const difference = items.length < count ? count - items.length : 0;\n\n    const newItems = Array(difference).fill().map((): Item => ({\n      leftDelta: randomValue(0, 1),\n      topDelta: randomValue(TOP_MIN, 1),\n      swingDelta: randomValue(0.2, 1),\n      speedDelta: {\n        rotateX: randomValue(0.3, 1),\n        rotateY: randomValue(0.3, 1),\n        rotateZ: randomValue(0.3, 1)\n      },\n      color: randomColor(colors)\n    }));\n\n    return items\n      .slice(0, count)\n      .concat(newItems)\n      .map(item => ({\n        ...item,\n        color: prevColors !== colors ? randomColor(colors) : item.color\n      }));\n  };\n\n  start = (resume?: boolean = false) => {\n    const {\n      explosionSpeed = DEFAULT_EXPLOSION_SPEED,\n      fallSpeed = DEFAULT_FALL_SPEED,\n      onAnimationStart,\n      onAnimationResume,\n      onAnimationEnd\n    } = this.props;\n\n    if (resume) {\n      onAnimationResume && onAnimationResume();\n    } else {\n      this.sequence = Animated.sequence([\n        Animated.timing(this.animation, {toValue: 0, duration: 0, useNativeDriver: true}),\n        Animated.timing(this.animation, {\n          toValue: 1,\n          duration: explosionSpeed,\n          easing: Easing.out(Easing.quad),\n          useNativeDriver: true\n        }),\n        Animated.timing(this.animation, {\n          toValue: 2,\n          duration: fallSpeed,\n          easing: Easing.quad,\n          useNativeDriver: true\n        }),\n      ]);\n\n      onAnimationStart && onAnimationStart();\n    }\n\n    this.sequence && this.sequence.start(({finished}: EndResult) => {\n      if (finished) {\n        onAnimationEnd && onAnimationEnd();\n      }\n    });\n  };\n\n  resume = () => this.start(true);\n\n  stop = () => {\n    const { onAnimationStop } = this.props;\n\n    onAnimationStop && onAnimationStop();\n\n    this.sequence && this.sequence.stop();\n  };\n\n  render() {\n    const { origin, fadeOut } = this.props;\n    const { items } = this.state;\n    const { height, width } = Dimensions.get('window');\n\n    return (\n      <React.Fragment>\n        {items.map((item: Item, index: number) => {\n          const left = this.animation.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: [origin.x, item.leftDelta * width, item.leftDelta * width]\n          });\n          const top = this.animation.interpolate({\n            inputRange: [0, 1, 1 + item.topDelta, 2],\n            outputRange: [-origin.y, -item.topDelta * height, 0, 0]\n          });\n          const rotateX = this.animation.interpolate({\n            inputRange: [0, 2],\n            outputRange: ['0deg', `${item.speedDelta.rotateX * 360 * 10}deg`]\n          });\n          const rotateY = this.animation.interpolate({\n            inputRange: [0, 2],\n            outputRange: ['0deg', `${item.speedDelta.rotateY * 360 * 5}deg`]\n          });\n          const rotateZ = this.animation.interpolate({\n            inputRange: [0, 2],\n            outputRange: ['0deg', `${item.speedDelta.rotateZ * 360 * 2}deg`]\n          });\n          const translateX = this.animation.interpolate({\n            inputRange: [0, 0.4, 1.2, 2],\n            outputRange: [0, -(item.swingDelta * 30), (item.swingDelta * 30), 0]\n          });\n          const opacity = this.animation.interpolate({\n            inputRange: [0, 1, 1.8, 2],\n            outputRange: [1, 1, 1, fadeOut ? 0 : 1]\n          });\n          const containerTransform = [{translateX: left}, {translateY: top}];\n          const transform = [{rotateX}, {rotateY}, {rotate: rotateZ}, {translateX}];\n\n          return (\n            <Confetti\n              color={item.color}\n              containerTransform={containerTransform}\n              transform={transform}\n              opacity={opacity}\n              key={index}\n              testID={`confetti-${index + 1}`}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Explosion;\n"]},"metadata":{},"sourceType":"module"}