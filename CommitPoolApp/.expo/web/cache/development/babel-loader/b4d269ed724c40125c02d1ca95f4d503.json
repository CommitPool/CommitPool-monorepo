{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ken/dev/CommitPoolMatic/CommitPoolApp/Track.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { ethers } from 'ethers';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport abi from \"./abi.json\";\n\nvar Track = function (_Component) {\n  _inherits(Track, _Component);\n\n  var _super = _createSuper(Track);\n\n  function Track(props) {\n    var _this;\n\n    _classCallCheck(this, Track);\n\n    _this = _super.call(this, props);\n\n    _this._retrieveData = function _callee(key) {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n\n              if (!(value !== null)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", value);\n\n            case 6:\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.state = {\n      account: {},\n      refreshToken: '',\n      step: 1,\n      fill: 0,\n      loading: false,\n      goal: 0,\n      total: 0,\n      startTime: 0,\n      endTime: 0,\n      type: '',\n      accessToken: ''\n    };\n    return _this;\n  }\n\n  _createClass(Track, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var refreshToken, accountString;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this._retrieveData('rt'));\n\n            case 2:\n              refreshToken = _context2.sent;\n              console.log(refreshToken);\n              this.setState({\n                refreshToken: refreshToken\n              });\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(this._retrieveData('account'));\n\n            case 7:\n              accountString = _context2.sent;\n              this.setAccount(accountString);\n              fetch('https://www.strava.com/api/v3/oauth/token', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  client_id: 51548,\n                  client_secret: '28d56211b9ca33972055bf61010074fbedc3c7c2',\n                  refresh_token: this.state.refreshToken,\n                  grant_type: 'refresh_token'\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                _this2.setState({\n                  accessToken: json.access_token\n                });\n              });\n              this.getCommitment();\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setAccount\",\n    value: function setAccount(accountString) {\n      var account = JSON.parse(accountString);\n      console.log(account);\n      this.setState({\n        account: account\n      });\n    }\n  }, {\n    key: \"getCommitment\",\n    value: function getCommitment() {\n      var url, provider, privateKey, wallet, contractAddress, contract, commitment, type;\n      return _regeneratorRuntime.async(function getCommitment$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56';\n              provider = new ethers.providers.JsonRpcProvider(url);\n              privateKey = this.state.account.signingKey.privateKey;\n              wallet = new ethers.Wallet(privateKey);\n              wallet = wallet.connect(provider);\n              contractAddress = '0x251B6f95F6A17D2aa350456f616a84b733380eBE';\n              contract = new ethers.Contract(contractAddress, abi, provider);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(contract.commitments(this.state.account.signingKey.address));\n\n            case 9:\n              commitment = _context3.sent;\n              console.log(commitment);\n              _context3.next = 13;\n              return _regeneratorRuntime.awrap(contract.activities(commitment['activityKey']));\n\n            case 13:\n              type = _context3.sent;\n              this.setState({\n                goal: commitment['goalValue'].toNumber() / 100,\n                startTime: commitment['startTime'].toNumber(),\n                endTime: commitment['endTime'].toNumber(),\n                type: type[0]\n              });\n              this.getActivity();\n              this.setState({\n                fill: this.state.total / this.state.goal\n              });\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getActivity\",\n    value: function getActivity() {\n      var _this3 = this;\n\n      return _regeneratorRuntime.async(function getActivity$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              fetch('https://test2.dcl.properties/activities?startTime=' + this.state.startTime + '&endTime=' + this.state.endTime + '&type=' + this.state.type + '&accessToken=' + this.state.accessToken, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer: ' + this.state.accessToken\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                _this3.setState({\n                  total: json.total\n                });\n\n                _this3.setState({\n                  fill: _this3.state.total / _this3.state.goal\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getUpdatedActivity\",\n    value: function getUpdatedActivity() {\n      var url, provider, privateKey, wallet, contractAddress, contract, contractWithSigner;\n      return _regeneratorRuntime.async(function getUpdatedActivity$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56';\n              provider = new ethers.providers.JsonRpcProvider(url);\n              privateKey = this.props.account.signingKey.privateKey;\n              wallet = new ethers.Wallet(privateKey);\n              wallet = wallet.connect(provider);\n              contractAddress = '0x251B6f95F6A17D2aa350456f616a84b733380eBE';\n              contract = new ethers.Contract(contractAddress, abi, provider);\n              contractWithSigner = contract.connect(wallet);\n              this.setState({\n                loading: true\n              });\n              _context5.prev = 9;\n              console.log(this.props.account.signingKey.address);\n              _context5.next = 13;\n              return _regeneratorRuntime.awrap(contractWithSigner.requestActivityDistance(this.props.account.signingKey.address, '0x1cf7D49BE7e0c6AC30dEd720623490B64F572E17', 'd8fcf41ee8984d3b8b0eae7b74eca7dd', {\n                gasLimit: 500000\n              }));\n\n            case 13:\n              this.setState({\n                loading: false\n              });\n              this.props.next(8);\n              _context5.next = 21;\n              break;\n\n            case 17:\n              _context5.prev = 17;\n              _context5.t0 = _context5[\"catch\"](9);\n              console.log(_context5.t0);\n              this.setState({\n                loading: false\n              });\n\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, [[9, 17]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#D45353',\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, this.state.loading ? React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          zIndex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 35\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 205\n        }\n      }, \"\\u231B\")) : undefined, React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          color: 'white',\n          marginBottom: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \"Track\"), React.createElement(AnimatedCircularProgress, {\n        size: 180,\n        width: 15,\n        rotation: 0,\n        fill: this.state.fill,\n        tintColor: \"white\",\n        onAnimationComplete: function onAnimationComplete() {\n          return console.log('onAnimationComplete');\n        },\n        backgroundColor: \"#D45353\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, function (fill) {\n        return React.createElement(Text, {\n          style: {\n            color: 'white',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }\n        }, _this4.state.fill.toFixed(1), \"%\");\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          color: 'white',\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, (this.state.fill / 100 * this.state.goal).toFixed(1), \"/\", this.state.goal, \" Miles\")), React.createElement(TouchableOpacity, {\n        style: this.state.fill !== 100 ? {\n          width: 300,\n          height: 50,\n          backgroundColor: '#999',\n          alignItems: 'center',\n          justifyContent: 'center'\n        } : {\n          width: 300,\n          height: 50,\n          backgroundColor: 'white',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this4.getUpdatedActivity();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, \"Claim Reward\")));\n    }\n  }]);\n\n  return Track;\n}(Component);\n\nexport { Track as default };","map":{"version":3,"sources":["/Users/ken/dev/CommitPoolMatic/CommitPoolApp/Track.tsx"],"names":["React","Component","AnimatedCircularProgress","ethers","abi","Track","props","_retrieveData","key","AsyncStorage","getItem","value","state","account","refreshToken","step","fill","loading","goal","total","startTime","endTime","type","accessToken","console","log","setState","accountString","setAccount","fetch","method","headers","body","JSON","stringify","client_id","client_secret","refresh_token","grant_type","then","res","json","access_token","getCommitment","parse","url","provider","providers","JsonRpcProvider","privateKey","signingKey","wallet","Wallet","connect","contractAddress","contract","Contract","commitments","address","commitment","activities","toNumber","getActivity","contractWithSigner","requestActivityDistance","gasLimit","next","backgroundColor","flex","alignItems","justifyContent","position","right","left","top","bottom","zIndex","fontSize","undefined","color","marginBottom","toFixed","marginTop","width","height","getUpdatedActivity"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, StyleSheet, Image, Text, Button, TouchableOpacity } from \"react-native\";\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { ethers } from 'ethers';\nimport { AsyncStorage } from 'react-native';\nimport { Moment } from 'moment';\nimport abi from './abi.json'\n\nexport default class Track extends Component <{next: any, account: any, code: string}, {refreshToken: string, type: string, account:any, total: number, startTime: Number, endTime: Number, loading: Boolean, step: Number, fill: number, goal: number, accessToken: String}> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: {},\n      refreshToken: '',\n      step: 1,\n      fill: 0,\n      loading: false,\n      goal: 0,\n      total: 0,\n      startTime: 0,\n      endTime: 0,\n      type: '',\n      accessToken: ''\n    };\n  }\n\n  async componentDidMount() {\n    const refreshToken: any = await this._retrieveData('rt')\n    console.log(refreshToken)\n    this.setState({refreshToken: refreshToken})\n    const accountString: any = await this._retrieveData('account')\n    this.setAccount(accountString);\n\n    fetch('https://www.strava.com/api/v3/oauth/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          client_id: 51548,\n          client_secret: '28d56211b9ca33972055bf61010074fbedc3c7c2',\n          refresh_token: this.state.refreshToken,\n          grant_type: 'refresh_token'\n        })\n    }).then(res => res.json())\n    .then((json) => {\n      this.setState({accessToken: json.access_token});\n    })\n\n    this.getCommitment()\n  }\n\n  _retrieveData = async (key: string) => {\n    try {\n      const value = await AsyncStorage.getItem(key);\n      if (value !== null) {\n        // We have data!!\n        return value;\n      }\n    } catch (error) {\n      // Error retrieving data\n    }\n  };\n\n  setAccount(accountString: string) {\n    const account = JSON.parse(accountString)\n    console.log(account)\n    this.setState({account: account})\n  }\n\n  async getCommitment() {    \n    const url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56'\n\n    const provider = new ethers.providers.JsonRpcProvider(url);    \n    let privateKey = this.state.account.signingKey.privateKey;\n    let wallet = new ethers.Wallet(privateKey);\n    \n    wallet = wallet.connect(provider);\n    \n    let contractAddress = '0x251B6f95F6A17D2aa350456f616a84b733380eBE';\n    let contract = new ethers.Contract(contractAddress, abi, provider);\n\n    const commitment = await contract.commitments(this.state.account.signingKey.address)\n    console.log(commitment)\n\n    const type = await contract.activities(commitment['activityKey'])\n    this.setState({\n      goal: commitment['goalValue'].toNumber() / 100,\n      startTime: commitment['startTime'].toNumber(),\n      endTime: commitment['endTime'].toNumber(),\n      type: type[0]\n    })\n\n    this.getActivity();\n\n    this.setState({fill: this.state.total / this.state.goal})\n  }\n\n  async getActivity() {\n    fetch('https://test2.dcl.properties/activities?startTime=' + this.state.startTime + '&endTime=' + this.state.endTime + '&type=' + this.state.type + '&accessToken=' + this.state.accessToken,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer: ' + this.state.accessToken\n        }\n      })\n      .then(res => res.json())\n      .then((json) => {\n        this.setState({total: json.total})\n        this.setState({fill: this.state.total / this.state.goal})\n      })\n  }\n\n  async getUpdatedActivity() {\n    \n    const url = 'https://rpc-mumbai.maticvigil.com/v1/e121feda27b4c1387cd0bf9a441e8727f8e86f56'\n\n    const provider = new ethers.providers.JsonRpcProvider(url);\n    \n    let privateKey = this.props.account.signingKey.privateKey;\n    let wallet = new ethers.Wallet(privateKey);\n    \n    wallet = wallet.connect(provider);\n\n    \n    let contractAddress = '0x251B6f95F6A17D2aa350456f616a84b733380eBE';\n    let contract = new ethers.Contract(contractAddress, abi, provider);\n\n    let contractWithSigner = contract.connect(wallet);\n    \n    this.setState({loading: true})\n    try {\n        console.log(this.props.account.signingKey.address)\n        await contractWithSigner.requestActivityDistance(this.props.account.signingKey.address, '0x1cf7D49BE7e0c6AC30dEd720623490B64F572E17', 'd8fcf41ee8984d3b8b0eae7b74eca7dd', {gasLimit: 500000});\n        this.setState({loading: false})\n        this.props.next(8)\n    } catch (error) {\n        console.log(error)\n        this.setState({loading: false})\n    }\n  }\n\n  render() {\n    return (\n        <View style={{backgroundColor: '#D45353', flex: 1, alignItems: 'center', justifyContent: 'space-around'}}>\n            {this.state.loading ? <View style={{alignItems: 'center', justifyContent: 'center', position: 'absolute', right: 0, left: 0, top: 0, bottom: 0, backgroundColor: 'rgba(0,0,0,0.5)', zIndex: 2}}><Text style={{fontSize: 25}}>⌛</Text></View> : undefined}\n            <View style={{alignItems: 'center'}}>\n                <Text style={{fontSize: 50, color: 'white', marginBottom: 70}}>Track</Text>\n                <AnimatedCircularProgress\n                    size={180}\n                    width={15}\n                    rotation={0}\n                    fill={this.state.fill}\n                    tintColor=\"white\"\n                    onAnimationComplete={() => console.log('onAnimationComplete')}\n                    backgroundColor=\"#D45353\" >\n                    {\n                        (fill) => (\n                        <Text style={{color: 'white', fontSize: 30}}>\n                            {this.state.fill.toFixed(1)}%\n                        </Text>\n                        )\n                    }\n                </AnimatedCircularProgress>\n                <Text style={{fontSize: 22, color: 'white', marginTop: 25}}>{((this.state.fill/100) * this.state.goal).toFixed(1)}/{this.state.goal} Miles</Text>\n            </View>\n            <TouchableOpacity\n                    style={this.state.fill !== 100 ? {width: 300, height: 50, backgroundColor: '#999', alignItems: 'center', justifyContent: 'center'}\n                        : {width: 300, height: 50, backgroundColor: 'white', alignItems: 'center', justifyContent: 'center'}}\n                    onPress={() => this.getUpdatedActivity()}\n                    >\n                <Text style={{fontSize: 30}}>Claim Reward</Text>\n            </TouchableOpacity>\n        </View>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}