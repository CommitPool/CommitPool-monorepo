{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport NativeLinearGradient from \"./NativeLinearGradient\";\n\nvar LinearGradient = function (_React$Component) {\n  _inherits(LinearGradient, _React$Component);\n\n  var _super = _createSuper(LinearGradient);\n\n  function LinearGradient() {\n    _classCallCheck(this, LinearGradient);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LinearGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          colors = _this$props.colors,\n          locations = _this$props.locations,\n          start = _this$props.start,\n          end = _this$props.end,\n          props = _objectWithoutProperties(_this$props, [\"colors\", \"locations\", \"start\", \"end\"]);\n\n      if (locations && colors.length !== locations.length) {\n        console.warn('LinearGradient colors and locations props should be arrays of the same length');\n        locations = locations.slice(0, colors.length);\n      }\n\n      return React.createElement(NativeLinearGradient, _extends({}, props, {\n        colors: Platform.select({\n          web: colors,\n          default: colors.map(processColor)\n        }),\n        locations: locations,\n        startPoint: _normalizePoint(start),\n        endPoint: _normalizePoint(end)\n      }));\n    }\n  }]);\n\n  return LinearGradient;\n}(React.Component);\n\nexport { LinearGradient as default };\n\nfunction _normalizePoint(point) {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}","map":{"version":3,"sources":["../src/LinearGradient.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;AAGA,OAAO,oBAAP;;IAWqB,c;;;;;;;;;;;;;6BACb;AAAA,wBAC8C,KAAK,KADnD;AAAA,UACE,MADF,eACE,MADF;AAAA,UACU,SADV,eACU,SADV;AAAA,UACqB,KADrB,eACqB,KADrB;AAAA,UAC4B,GAD5B,eAC4B,GAD5B;AAAA,UACoC,KADpC;;AAGJ,UAAI,SAAS,IAAI,MAAM,CAAC,MAAP,KAAkB,SAAS,CAAC,MAA7C,EAAqD;AACnD,QAAA,OAAO,CAAC,IAAR,CAAa,+EAAb;AACA,QAAA,SAAS,GAAG,SAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,MAAM,CAAC,MAA1B,CAAZ;AACD;;AAED,aACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,SAAA,EAAA,EACf,KADe,EACV;AACT,QAAA,MAAM,EAAE,QAAQ,CAAC,MAAT,CAAgB;AACtB,UAAA,GAAG,EAAE,MADiB;AAEtB,UAAA,OAAO,EAAE,MAAM,CAAC,GAAP,CAAW,YAAX;AAFa,SAAhB,CADC;AAKT,QAAA,SAAS,EAAE,SALF;AAMT,QAAA,UAAU,EAAE,eAAe,CAAC,KAAD,CANlB;AAOT,QAAA,QAAQ,EAAE,eAAe,CAAC,GAAD;AAPhB,OADU,CAArB,CADF;AAYD;;;;EArByC,KAAK,CAAC,S;;SAA7B,c;;AAwBrB,SAAS,eAAT,CACE,KADF,EAC8C;AAE5C,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,SAAP;AACD;;AAED,MAAI,KAAK,CAAC,OAAN,CAAc,KAAd,KAAwB,KAAK,CAAC,MAAN,KAAiB,CAA7C,EAAgD;AAC9C,IAAA,OAAO,CAAC,IAAR,CAAa,8EAAb;AACA,WAAO,SAAP;AACD;;AAED,SAAO,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAvB,GAA+B,CAAC,KAAK,CAAC,CAAP,EAAU,KAAK,CAAC,CAAhB,CAAtC;AACD","sourcesContent":["import * as React from 'react';\nimport { Platform, processColor, View } from 'react-native';\n\nimport NativeLinearGradient from './NativeLinearGradient';\n\nexport type LinearGradientProps = {\n  colors: string[];\n  locations?: number[] | null;\n  start?: LinearGradienPoint | null;\n  end?: LinearGradienPoint | null;\n} & React.ComponentProps<typeof View>;\n\nexport type LinearGradienPoint = { x: number; y: number } | [number, number];\n\nexport default class LinearGradient extends React.Component<LinearGradientProps> {\n  render() {\n    let { colors, locations, start, end, ...props } = this.props;\n\n    if (locations && colors.length !== locations.length) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      locations = locations.slice(0, colors.length);\n    }\n\n    return (\n      <NativeLinearGradient\n        {...props}\n        colors={Platform.select({\n          web: colors as any,\n          default: colors.map(processColor),\n        })}\n        locations={locations}\n        startPoint={_normalizePoint(start)}\n        endPoint={_normalizePoint(end)}\n      />\n    );\n  }\n}\n\nfunction _normalizePoint(\n  point: LinearGradienPoint | null | undefined\n): [number, number] | undefined {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}